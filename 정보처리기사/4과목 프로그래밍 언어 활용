# 4과목 : 프로그래밍 언어 활용
<span style=color:orange>3, 4과목은 전공 시간에 배운 내용 위주이므로 더욱 주요파트만 간추려 정리한다.</span>

---

## 49. 공통 모듈 구현
### 모듈화
거대한 문제를 작은 조각의 문제들로 나누어 구현해놓은 것
🌟결합도는 낮은 것, 응집도는 높은 게 다시한번 좋은 것이다.

결합도 순서 : 데 스 제 외 공 내
응집도 순서 : 기 순 교 절 ~ 시 논 우

---

## 50, 51. C언어
1972년 벨 연구소의 데니스 리치에 의해 개발

### 기억 클래스(종류 문제)
자동 변수 / 레지스터 변수 / 정적 변수 / 외부 변수

### 문자, 문자열 입력
getchar(), putchar() -  문자 입출력
gets(), puts() - 문자열 입출력 (s가 string이다)

+) \n은 엔터, \r은 커서를 현재줄 처음으로 다시 이동
++) long, float-4byte, double-8byte

### 변수명 작성규칙
- 첫 글자는 숫자로 시작 불가
- 공백도 포함 불가(-또는 _ 이용)

### 🌟🌟🌟🌟🌟 포인터
주저변, 주소를 저장하는 변수이다.
즉, 다른 변수의 주소값을 저장할 수 있다.

### 라이브러리 함수
1. stdio.h - C언어 표준 입출력 라이브러리
2. stdlib - C언어 표준 유틸리티 함수 모아놓은 헤더파일
>
atoi() - 문자열 정수로 변환
atol() - 문자열 로그형정수로 변환
itoa() - 숫자를 문자열로 변환

### 비트 연산자
- & : AND연산자, 둘 다 참(1)이어야 참
- | : OR연산자, 둘 중 하나만 참이어도 참
- ^ : XOR연산자, 둘이 같아야 참 (1-1 or 0-0)

---

## 52, 53. JAVA
### 자료형
부끄럽지만 이번에 처음 알게 된 사실이 있는데, <span style=color:gold>언어별로 바이트 수가 다를 수 있다</span>는 것이다.

다음 표를 참고하면 C와 JAVA의 정확한 차이점을 알 수 있다.
![](https://velog.velcdn.com/images/king33/post/1bc780a4-d3cc-438e-bc3b-604922d40157/image.PNG)

### 변수명 작성 규칙
C언어와 다른점은 변수에 '$'를 쓸 수 있게 되었다는 점

### 오버로딩 vs 오버라이딩
오버로딩 - 같은클래스 내 동일한 이름 함수 사용
오버라이딩 - 2개의 클래스 이상에서 상속 개념으로 동일 이름 함수 사용

### Switch문
```
switch(조건값)
{
	case 1:
    	break;
    case 2:
    	break;
        
    🌟default:
    
}
```

---

## 54. Python
### 스크립트 언어?
작성한 소스코드를 컴파일 없이도 실행할 수 있는 프로그래밍 언어이다. (JS)

### 종류
1. ASP - 윈도우
2. JSP - JAVA 기반
3. PHP - 리눅스 등 다양한 운영체제 모두 가능

### 🌟🌟 인덱스
다른 언어들과 다르게 [-1] 이런 인덱스가 존재한다!
이는 역순으로, 맨 오른쪽의 인덱스가 -1이다.
ex) -6이면 오른쪽에서부터 여섯번째의 놈을 찾으면 댐

++) [:] 얘는 모든 인덱스를 지칭
++) [x:y:z] x부터 'y-1'까지 z만큼 건너뛰면서 작업

---

## 55. 운영체제
### OS란?
SW나 HW를 효율적으로 쓸 수 있게 해주는 기특한 녀석이다.
ex) 윈도우, 리눅스, MAC 등

### 기능에 따른 분류
데이터 관리(RAM) / 감시 / 작업 제어 등

---

## 56. 프로세스
실행 중인 프로그램

### 🌟🌟🌟 <span style=color:red>프로세스 상태 전이</span>
그림만 어느정도 기억해도 OK
![](https://velog.velcdn.com/images/king33/post/fbb9bc8a-9ec1-404f-8a85-9281630792ad/image.PNG)

### 쓰레드
프로세스보다도 훨씬 작은 단위
모듈 - 개발관점, 쓰레드 - 운영체제 관점

### 🌟 데드락 = 교착상태
교통사고. 무한정 프로세스들이 기다리는 상태

발생 조건?
1. 상호 배제
2. 점유 및 대기
3. 비선점 -> 선점이라고 자주 틀린 보기를 준다!
4. 환형 대기

---

## 57. 프로세스 스케줄링
### SJF, Shortest Job First
제일 쉬운 스케줄링. 그냥 실행시간 짧은 거 순서대로 고르면 댐
=> 비선점 기법 => 이미 할당된 CPU여도 다른 프로세스 애가 강제로 뺏어서 사용할 수 있음!!!

### 🌟 HRN, Highest Response-ratio Next
🌟 우선순위 계산식?
(대기시간 + 서비스를 받을 시간) / 서비스를 받을 시간
<span style=color:red>대 서 / 서</span>
-> 이 우선순위를 계산해서 수치가 가장 '높은' 순서대로 먼저 실행되는 것이다.

---

## 58. 기억장치 관리
그냥 직접 다 해보면 되는것들이므로 넘어간다.

---

## 59. 디스크 스케줄링
디스크에서 읽어들이는 순서를 결정하는 것

### FCFS, First Come First Service
FIFO랑 똑같다. -> 요청한 순서대로 가므로 총 이동거리를 보면 됨

### SSTF, Shortest Seek Time
시간이 짧은 순으로 진행
이전 것이랑 "뺄셈"을 해봐서 가장 가까운 순으로 이동함

---

## 60. 정보관리
### 파일 시스템 관리
Q. 🌟🌟 단골질문 : 파일 디스크립터의 내용으로 틀린 것?
<span style=color:red>실행시간</span>나오면 이게 바로 답

파일 디스크립터의 내용으로는
구조, 유형, 크기, 이름, 생성/수정 시간, 접근횟수 등이 있음
(실행시간은 전혀 나오지 않는다)

---

## 61. 분산 운영체제
### 다중 처리기 = 멀티 프로세서
하나의 프로그램에 2개 이상의 프로세서가 달린 것을 의미

* 🌟 하이퍼 큐브?
무려 "10개" 이상의 프로세서를 병렬로 동작시키는 구조이다.

### 투명성
항상 투명성은 중요한 키워드였음

---

## 62. UNIX (운영체제)
오래된 개방형 C언어 운영체제이다.

### 구성요소
커널 / 쉘 / 유틸리티(보조) 로 이루어져있음

+) cat -> 파일 내용 메모장처럼 표시
+) fork -> 새로운 프로세스 생성

그냥 C언어 문법으로 문제 풀면 된다!

---

## 63. 🌌 OSI 7 Layer
개방형 시스템

### 계층
P D N T ~ S P A 로 암기

시험문제에 자주 나오는 것은 3계층 / 4계층이다.

### 🌟 X.21
디지털 방식의 프로토콜이다. 가끔 객관식 보기로 출제

### 🌟🌟 HDLC, PPP
얘네도 자주 나오는 프로토콜

++) 🌟🌟🌟특히 X.25가 보기에 있으면 무조건 얘 골라라

### 4층(트렌스포트)의 주요 프로토콜
1. TCP - 데이터를 받는 것에 신경을 많이 쓰는 프로토콜
2. UDP - 데이터를 받는 것은 관심X 그냥 보내는거에만 
= ACK를 안 받는다는 것

### 2층(데이터 '링크')
🌟 링크의 설정과 유지 및 종료를 담당
노드 간 오류 제어와 흐름 제어 기능을 수행한다.
특히 효율적 데이터 전송 -> 이거나오면 데이터링크 레이어임
(전송이라고 해서 무조건 트렌스포트가 아님을 기억)

---

## 64. TCP/IP 프로토콜
다른 컴퓨터 간 송/수신 도와주는 표준 프로토콜

### 5계층
이 프로토콜은 5, 6, 7층이 하나로 App레이어로 정의된다.

- TCP : 4층 🌟신뢰성 (실시간 스트리밍)
- IP : 3층에 해당 🌟비신뢰성
이 신뢰성, 비신뢰성은 시험에 종종 보기로 등장함

+) UDP : 대용량 미디어 파일 저장에 유리(유튜브)

### 🌟🌟 ICMP, 인터넷 컨트롤 메세지 프로토콜
IP 프로토콜에서 오류 보고와 수정을 위한 프로토콜 with 에코메세지

### 🌟 ARP
IP주소(논리적 주소)를 MAC주소(물리적 주소)로 변경해줌

---

## 65. IP주소
### IPv4
32비트 길이의 IP주소
0000 0000 0000 0000

++) 우리가 보통 많이 이용하는 클래스는 C이다.

### 서브넷 마스크
네트워크를 더 쪼개서 효율적으로 네트워크를 관리하기 위한 수단

🌟 만약... 계산문제가 나온다면 그냥 넘겨라
전공시험때 풀어봤는데 한 문제당 시간 소요가 너무 길었었음

### IEEE 802 표준 규격
>
802.4 - 토큰 버스
802.5 - 토큰 링

이것만 기억해라!

### 🌟🌟 CSMA
1. CSMA/CA : 아예 충돌을 회피하려고 한다. [무선]
2. CSMA/CD : 일단 충돌을 때리고 어디에서 박았는지 확인 [유선]

++) IPv6는 패킷 크기가 따로 고정되어 있지 않다.