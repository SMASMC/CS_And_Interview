# 3과목 : 데이터베이스 구축
<span style=color:orange>3, 4과목은 전공 시간에 배운 내용 위주이므로 더욱 주요파트만 간추려 정리한다.</span>

---

## 34. 🌟🌟 자료구조
### 분류
1. 선형
- 리스트 (선형, 연결-포인터와 링크가 있음)
- 스택 LIFO
- 큐 FIFO : 프론트, 리어 로 구성
- 데크

2. 비선형
- 트리
- 그래프

### 인덱스
DBMS의 구성 요소로 독립적인 저장 공간을 제공한다.

### 데크, Deque
자료의 삽입과 삭제가 리스트 양쪽 끝에서 모두 이루어지는 구조
스택 + 큐 의 복잡한 형태를 의미(양쪽 삽입)

Q. 스택에 관한 문제는 나올 수 있는 출력 경우를 묻는 문제가 출제된다. => 직접 해보면 문제업이 할 수 있음
++) 0-주소 인스트럭션에도 반드시 필요하다.

---

## 35. 비선형 구조
### 트리
트리란? 그래프의 특수한 형태로써, 노드와 가지를 이용하여 <span style=color:red>사이클을 이루지 않도록</span> 연결한 자료구조를 의미한다.

* 차수 : 딸린 자식수의 최대

### 🌟🌟🌟 이진 트리 운행법
>
전위 : 루트 -> L -> R [왼쪽 줄기 따라 일단 쭉 내려감]
중위 : L -> 루트 -> R [스캔]
후위 : L -> R -> 루트

풀이법 : 항상 루트 기준으로 L과 R을 동그라미 쳐놓고 위 순서를 적용하면 틀릴 일이 없다!

### 수식의 표기법
여기도 +전위 / 중+위 / 후위+ 로 구분
ex) (A x B)+(C x D)
=> 전위 : +(x(AB) x(CD)) = + xAB xCD
=> 후위 : ABx CDx +

Q. n개의 노드로 구성된 무방향그래프 최대 간선 수?
여기도 n(n-1) / 2

---

## 36. 🌟🌟🌟 정렬
### 내부정렬
주기억 장치에서 정렬

### 외부정렬
보조기억 장치에서 정렬

### 삽입정렬 O(n^2)
여기에서 가장 중요한 건 "키 값"이다 (키 나오면 바로 삽입정렬)
인덱스 순서대로 "니가 나보다 큰 값이니?" 앞에 애들한테 각각 물어봐서 자리바꾸는 형식으로 진행됨
(but 진짜 운 좋으면 O(n)일때도 있다고 한다.)

### 버블정렬 O(n^2)
맨 앞 두자리부터 "니가 나보다 작니?"로 버블버블하며 맨 뒤로 도착하는 과정
버블정렬의 가장 큰 특징 - <span style=color:red>버블이 오른쪽 끝 까지 도달하는 과정을 1회전이라고 함</span>
이 1회전이 끝나면 가장 큰 값이 제일 오른쪽에 도달해져있다.

### 선택정렬 O(n^2)
얘는 버블정렬과는 반대로 가장 작은게 제일 앞에 오는 식으로 정렬된다.
첫 번째 인덱스 애를 2, 3, 4, 5... 친구들과 비교하는 식으로

여기까지가 시간복잡도 긴 애들

### O(n logn)의 정렬들 3가지 - 병합, 퀵, 힙 
### 1. 병합정렬[합병정렬]
두 개의 키들을 한 쌍으로 하여 각 쌍에 대해 우위를 정한다.
얜 최악도 O(n logn)!!

### 2. 퀵정렬
<span style=color:red>"피봇"</span> 나오면 무조건 얘다.
but 얘는 최악의 경우 O(n^2)까지 나온다. -> 모 or 도

### 3. 힙정렬
전이진 트리 이용한 정렬 방법
"레코드" 나오면 바로 힙정렬이다

---

## 37. 검색과 해싱
### 🌟 피보나치 수열
앞 2개를 더해서 뒤 수를 정하는 수열

### 해싱, Hashing
해싱 함수를 이용하여 레코드키에 대한 해시 테이블 내의 홈주소 계산 후 주어진 레코드에 접근
-> 속도는 가장 빠르지만, <span style=color:red>충돌</span>이 발생할 수 있다..!
++) 동의어 - 충돌난 레코드들 집합
++) XOR한 값들을 홈주소로 이용하는 방식? "폴딩"

---

## 38. 인덱스구조 + 파일편성
### 인덱스(색인)
DB에서 자료를 빨리찾기 위한 별도의 표를 만들어놓는 것.

+++++) 👴 면접 질문
인덱스가 되려면?
변동이 없는 속성을 골라야 인덱스로써 안정적인 역할을 할 수 있음

### 🌟🌟 오버플로우 영역
한 블록 내에 레코드들이 꽉 차서 더는 레코드입력 처리할 수 없을 때를 의미
Q. 색인순차 파일에 꼭 필요한 것은? 오버플로우

---

## 39. <span style=color:gold>드디어 DB</span>
### DB란?
통합, 저장, 운영, 공용 데이터이다.
기출) "분배" 데이터는 DB정의에 해당하지 않는다!

### 기능
정의-스키마 정의 / 조작-데이터 다룸 / 제어-접근권한, 무결성
++) 무결성? 또나옴 동시 여러사람이 쓸 때 문제없이..
즉 제어어는 불법적인 사용자로부터 데이터를 보호하는 역할

### 데이터 웨어하우스(창고)
기간 업부 시스템에서 추출되 새로 생성된 비휘발적 데이터집합

OLAB - 대용량 데이터를 짱빠르게 처리하며 추출 분석도 쉽게 할 수 있도록 지원하는 데이터 분석기술
🌟🌟종류? Roll-Up, Drill-Down, Dicing, Slicing

---

## 40. DB 구조
### 스키마?
DB의 구조에 대한 모든 정의이다.(개체/속성/관계 등)
Q. DB overall logical stucture? "스키마"

### 3계층
>
1. 외부 스키마 - 어케 스키마에 접근할 수 있는지를 정의
2. 🌟개념 스키마 - 얼마나 효율적으로 넣을 것인지
3. 내부 스키마 - DB 실제 저장방법 기술(물리적)

### 데이터 모델
* 개념적 모델 : ERD

* 논리적 모델 : 계층형, 망형, 관계형, 객체지향형

구성요소 3가지?
🌟데이터 구조, 연산, 제약조건

### 🌟🌟🌟🌟🌟 ERD
그림(도형별) 너무 많이 출제되는 필수개념
![](https://velog.velcdn.com/images/king33/post/9182f548-f82f-47ed-b227-aff6e8bb60b0/image.PNG)
* 개체 = 엔티티 = 표 이름
* 릴레이션 = 스키마 = 표
